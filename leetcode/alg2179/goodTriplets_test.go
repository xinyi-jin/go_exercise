package alg2179

import "testing"

func Test_goodTriplets(t *testing.T) {
	type args struct {
		nums1 []int
		nums2 []int
	}
	tests := []struct {
		name string
		args args
		want int64
	}{

		{"Test_goodTriplets_01", args{[]int{2, 0, 1, 3}, []int{0, 1, 2, 3}}, 1},
		{"Test_goodTriplets_02", args{[]int{4, 0, 1, 3, 2}, []int{4, 1, 0, 2, 3}}, 4},
		{"Test_goodTriplets_03", args{[]int{80, 154, 368, 224, 22, 78, 235, 263, 85, 67, 283, 373, 228, 352, 284, 19, 92, 296, 214, 252, 240, 269, 185, 212, 9, 144, 209, 176, 122, 362, 53, 344, 374, 205, 34, 184, 358, 353, 43, 117, 225, 68, 193, 12, 108, 243, 197, 50, 134, 242, 300, 0, 60, 104, 238, 23, 129, 363, 255, 110, 271, 329, 273, 65, 74, 268, 105, 333, 171, 147, 334, 210, 319, 372, 72, 248, 357, 246, 87, 187, 194, 69, 328, 4, 274, 26, 253, 152, 343, 196, 164, 1, 119, 250, 190, 143, 270, 192, 90, 346, 291, 36, 58, 230, 81, 338, 191, 88, 138, 206, 56, 340, 322, 258, 41, 179, 219, 59, 309, 6, 101, 351, 316, 313, 325, 198, 371, 155, 170, 20, 202, 285, 38, 124, 45, 97, 331, 332, 180, 94, 278, 161, 5, 49, 336, 259, 174, 342, 3, 213, 227, 8, 102, 289, 79, 63, 367, 369, 262, 292, 355, 237, 73, 42, 121, 354, 47, 348, 234, 326, 286, 140, 251, 159, 297, 364, 315, 208, 120, 183, 360, 279, 130, 2, 107, 7, 288, 282, 32, 204, 254, 290, 46, 175, 37, 132, 293, 177, 157, 148, 239, 128, 142, 145, 173, 55, 113, 40, 220, 168, 91, 48, 287, 221, 137, 311, 52, 33, 99, 153, 321, 24, 18, 320, 112, 10, 277, 245, 17, 317, 345, 115, 211, 100, 294, 162, 71, 256, 167, 375, 57, 330, 35, 118, 27, 335, 66, 93, 359, 247, 264, 281, 39, 70, 244, 295, 31, 116, 236, 169, 303, 280, 241, 306, 233, 231, 261, 267, 365, 64, 15, 226, 106, 165, 126, 188, 156, 82, 123, 195, 370, 158, 54, 141, 350, 160, 349, 133, 327, 136, 260, 44, 304, 131, 200, 215, 182, 62, 28, 86, 127, 163, 178, 103, 361, 29, 76, 302, 30, 189, 201, 223, 186, 257, 95, 199, 229, 77, 207, 222, 366, 25, 337, 21, 109, 216, 299, 150, 275, 13, 232, 61, 265, 16, 172, 347, 307, 323, 11, 339, 14, 276, 305, 203, 114, 181, 218, 84, 75, 89, 149, 111, 324, 341, 272, 314, 96, 139, 125, 249, 318, 301, 98, 356, 135, 51, 312, 83, 146, 266, 151, 166, 298, 308, 310, 217},
			[]int{117, 272, 39, 369, 301, 254, 1, 137, 10, 215, 88, 305, 141, 55, 237, 99, 110, 47, 8, 294, 171, 12, 130, 335, 302, 286, 22, 182, 101, 102, 119, 84, 20, 98, 321, 158, 38, 56, 235, 174, 346, 173, 14, 92, 115, 205, 155, 334, 226, 89, 333, 238, 191, 60, 218, 236, 329, 284, 184, 9, 326, 306, 240, 224, 217, 210, 15, 162, 151, 296, 167, 330, 362, 366, 341, 266, 336, 180, 314, 122, 323, 127, 5, 91, 282, 223, 85, 356, 35, 349, 371, 342, 7, 23, 331, 207, 104, 34, 344, 195, 268, 36, 276, 242, 82, 147, 187, 136, 156, 308, 340, 262, 54, 351, 76, 227, 152, 95, 181, 105, 189, 61, 231, 183, 208, 263, 138, 233, 360, 212, 81, 319, 350, 295, 313, 374, 241, 172, 228, 62, 93, 365, 194, 75, 120, 150, 265, 178, 348, 153, 49, 0, 113, 232, 90, 337, 73, 290, 303, 129, 248, 142, 196, 168, 132, 6, 111, 300, 370, 149, 17, 159, 18, 57, 288, 283, 21, 134, 72, 161, 332, 52, 160, 289, 140, 199, 106, 74, 375, 121, 220, 83, 316, 86, 48, 221, 311, 260, 157, 249, 307, 190, 309, 41, 51, 253, 315, 271, 234, 154, 135, 78, 3, 193, 42, 338, 225, 45, 257, 280, 318, 364, 143, 27, 200, 325, 97, 255, 96, 278, 65, 343, 197, 11, 68, 270, 291, 229, 274, 148, 361, 359, 204, 125, 368, 70, 275, 347, 100, 277, 165, 353, 198, 53, 327, 43, 201, 179, 19, 247, 107, 145, 28, 202, 258, 352, 133, 269, 216, 324, 116, 355, 320, 37, 131, 373, 211, 166, 267, 185, 261, 112, 298, 169, 203, 128, 246, 363, 31, 251, 139, 357, 177, 279, 108, 124, 24, 206, 80, 256, 281, 345, 273, 245, 367, 77, 16, 339, 372, 118, 26, 103, 213, 230, 214, 87, 164, 250, 243, 59, 123, 304, 67, 46, 222, 328, 176, 13, 292, 126, 310, 4, 30, 285, 287, 170, 239, 317, 146, 293, 66, 297, 259, 322, 58, 312, 40, 63, 33, 114, 186, 175, 29, 209, 219, 25, 192, 144, 79, 244, 109, 71, 44, 252, 188, 264, 32, 64, 358, 2, 354, 69, 50, 163, 299, 94}},
			1490997},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := goodTriplets(tt.args.nums1, tt.args.nums2); got != tt.want {
				t.Errorf("goodTriplets() = %v, want %v", got, tt.want)
			}
		})
	}
}
